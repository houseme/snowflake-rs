name: Build

on:
  push:
    branches: [ "main" ]
    tags:
      - "*"
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

jobs:
  rust_fmt_check:
    name: RustFmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt -- --check
  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run cargo clippy check
        run: cargo clippy --all-features
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run cargo test
        run: cargo test --all-features
  publish_on_crates_io:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags') # Only on tags
    needs:
      - rust_fmt_check
      - clippy_check
      - test
    steps:
      - name: Checkout code
        # Reference your environment variables
        uses: actions/checkout@v4
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run cargo publish
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
#  publish:
#    name: 'Publish to Cargo'
#    runs-on: ubuntu-latest
#
#    # Reference your environment variables
#    environment: cargo
#    if: startsWith(github.ref, 'refs/tags') # Only on tags
#    needs:
#      - rust_fmt_check
#      - clippy_check
#      - test
#    steps:
#      - uses: actions/checkout@v4
#      # Use caching to speed up your build
#      - name: Cache publish-action bin
#        id: cache-publish-action
#        uses: actions/cache@v4
#        env:
#          cache-name: cache-publish-action
#        with:
#          path: ~/.cargo
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-v0.1.16
#
#      # install publish-action by cargo in github action
#      - name: Install publish-action
#        if: steps.cache-publish-action.outputs.cache-hit != 'true'
#        run:
#          cargo install publish-action --version=0.1.16
#
#      - name: Run publish-action
#        id: publish-action
#        run:
#          publish-action
#        env:
#          # This can help you tagging the github repository
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          # This can help you publish to crates.io
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#
#      - name: Update Changelog.md
#        if: steps.publish-action.outputs.new_version == 'true' && steps.publish-action.outputs.publish == 'true'
#        run: |
#          changelog -o CHANGELOG.md